# Generated by Django 5.2.5 on 2025-09-15 11:27

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('name_eng', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('role_eng', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_eng', models.TextField(blank=True, null=True)),
                ('items', models.JSONField(default=dict)),
                ('ability', models.JSONField(default=dict)),
                ('image_path', models.CharField(blank=True, max_length=500, null=True)),
                ('is_display', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'character',
            },
        ),
        migrations.CreateModel(
            name='Difficulty',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('is_display', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'difficulty',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_display', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='Mode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('is_display', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mode',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('title_eng', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_eng', models.TextField(blank=True, null=True)),
                ('is_display', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image_path', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'scenario',
            },
        ),
        migrations.CreateModel(
            name='GameRoom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('waiting', 'Waiting'), ('play', 'Playing'), ('finish', 'Finished')], default='waiting', max_length=20)),
                ('room_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='public', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('max_players', models.IntegerField(default=1)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_gameroom', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gameroom',
            },
        ),
        migrations.CreateModel(
            name='GameJoin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_ready', models.BooleanField(default=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_by_user', to=settings.AUTH_USER_MODEL)),
                ('gameroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_by_room', to='game.gameroom')),
            ],
            options={
                'db_table': 'gamejoin',
            },
        ),
        migrations.CreateModel(
            name='MultimodeSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('choice_history', models.JSONField(default=dict)),
                ('character_history', models.JSONField(default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('play', 'Playing'), ('finish', 'Finished')], default='play', max_length=20)),
                ('character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='character_multimode_session', to='game.character')),
                ('gameroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gameroom_multimode_session', to='game.gameroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_multimode_session', to=settings.AUTH_USER_MODEL)),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenario_multimode_session', to='game.scenario')),
            ],
            options={
                'db_table': 'multimode_session',
            },
        ),
        migrations.CreateModel(
            name='GameRoomSelectScenario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('difficulty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='selected_difficulty', to='game.difficulty')),
                ('gameroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_room', to='game.gameroom')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='selected_genre', to='game.genre')),
                ('mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='selected_mode', to='game.mode')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selected_scenario', to='game.scenario')),
            ],
            options={
                'db_table': 'gameroom_select_scenario',
            },
        ),
        migrations.AddField(
            model_name='character',
            name='scenario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character', to='game.scenario'),
        ),
        migrations.CreateModel(
            name='SinglemodeSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('choice_history', models.JSONField(default=dict)),
                ('character_history', models.JSONField(default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('play', 'Playing'), ('finish', 'Finished')], default='play', max_length=20)),
                ('character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='character_singlemode_session', to='game.character')),
                ('difficulty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='difficulty_singlemode_session', to='game.difficulty')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='genre_singlemode_session', to='game.genre')),
                ('mode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mode_singlemode_session', to='game.mode')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenario_singlemode_session', to='game.scenario')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_singlemode_session', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'singlemode_session',
            },
        ),
    ]
